@charset "UTF-8";

// Color
@import "materialize/color-variables";
@import "materialize/color-classes";

// Variables;
@import "materialize/variables";

// Reset
@import "materialize/normalize";

// materialize
@import "materialize/global";
@import "materialize/badges";
@import "materialize/icons-material-design";
@import "materialize/grid";
@import "materialize/navbar";
@import "materialize/typography";
@import "materialize/transitions";
@import "materialize/cards";
@import "materialize/toast";
@import "materialize/tabs";
@import "materialize/tooltip";
@import "materialize/buttons";
@import "materialize/dropdown";
@import "materialize/waves";
@import "materialize/modal";
@import "materialize/collapsible";
@import "materialize/chips";
@import "materialize/materialbox";
@import "materialize/forms/forms";
@import "materialize/table_of_contents";
@import "materialize/sidenav";
@import "materialize/preloader";
@import "materialize/slider";
@import "materialize/carousel";
@import "materialize/tapTarget";
@import "materialize/pulse";
@import "materialize/datepicker";
@import "materialize/timepicker";


// hamburgers icon
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x : 10px !default;
$hamburger-padding-y : 10px !default;
$hamburger-layer-width : 40px !default;
$hamburger-layer-height : 4px !default;
$hamburger-layer-spacing : 6px !default;
$hamburger-layer-color : rgb(255, 255, 255) !default;
$hamburger-layer-border-radius : 0px !default;
$hamburger-hover-opacity : 0.7 !default;
$hamburger-active-layer-color : $hamburger-layer-color !default;
$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter : false !default;
$hamburger-hover-filter : opacity(50%) !default;
$hamburger-active-hover-filter: $hamburger-hover-filter !default;

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: (3dx,
    // 3dx-r,
    // 3dy,
    // 3dy-r,
    // 3dxy,
    // 3dxy-r,
    // arrow,
    // arrow-r,
    // arrowalt,
    // arrowalt-r,
    // arrowturn,
    // arrowturn-r,
    // boring,
    collapse,
    collapse-r,
    elastic,
    elastic-r,
    // emphatic,
    // emphatic-r,
    // minus,
    // slider,
    // slider-r,
    // spin,
    // spin-r,
    // spring,
    // spring-r,
    // stand,
    // stand-r,
    // squeeze,
    // vortex,
    vortex-r) !default;

// Base Hamburger (We need this)
// ==================================================
@import "hamburgers/base";

// Hamburger types
// ==================================================
@import "hamburgers/types/3dx";
@import "hamburgers/types/3dx-r";
@import "hamburgers/types/3dy";
@import "hamburgers/types/3dy-r";
@import "hamburgers/types/3dxy";
@import "hamburgers/types/3dxy-r";
@import "hamburgers/types/arrow";
@import "hamburgers/types/arrow-r";
@import "hamburgers/types/arrowalt";
@import "hamburgers/types/arrowalt-r";
@import "hamburgers/types/arrowturn";
@import "hamburgers/types/arrowturn-r";
@import "hamburgers/types/boring";
@import "hamburgers/types/collapse";
@import "hamburgers/types/collapse-r";
@import "hamburgers/types/elastic";
@import "hamburgers/types/elastic-r";
@import "hamburgers/types/emphatic";
@import "hamburgers/types/emphatic-r";
@import "hamburgers/types/minus";
@import "hamburgers/types/slider";
@import "hamburgers/types/slider-r";
@import "hamburgers/types/spin";
@import "hamburgers/types/spin-r";
@import "hamburgers/types/spring";
@import "hamburgers/types/spring-r";
@import "hamburgers/types/stand";
@import "hamburgers/types/stand-r";
@import "hamburgers/types/squeeze";
@import "hamburgers/types/vortex";
@import "hamburgers/types/vortex-r";
// ==================================================
// Cooking up additional types:
//
// The Sass for each hamburger type should be nested
// inside an @if directive to check whether or not
// it exists in $hamburger-types so only the CSS for
// included types are generated.
//
// e.g. hamburgers/types/_new-type.scss
//
// @if index($hamburger-types, new-type) {
//   .hamburger--new-type {
//     ...
//   }
// }



// utilitiers
@import "custom/colors";
@import "custom/breakpoint";
@import "custom/functions";
@import "custom/mixins";
@import "custom/fonts";


// custom css
@import "custom/colors.scss";
@import "custom/utillities";
@import "custom/mapping";
@import "custom/content/html.scss";
@import "custom/content/navbar.scss";
@import "custom/content/vcard.scss";
@import "custom/content/timeline.scss";
@import "custom/content/skills.scss";